@page "/"
@rendermode InteractiveServer
@inject Services.MachineStatusService MachineStatusService

<h3>Machine Dashboard</h3>

@if (usage == null || maintenanceCheck == null)
{
    <p>Loading dashboard...</p>
}
else
{
    <div>
        <h4>Usage</h4>
        <p>Runtime Hours: @usage.RuntimeHours</p>
        <p>Cycle Count: @usage.CycleCount</p>
        <p>Last Updated: @usage.LastUpdated.ToString("yyyy-MM-dd HH:mm:ss")</p>
    </div>

    <div>
        <h4>Maintenance Check</h4>
        @if (maintenanceCheck.RequiresMaintenance)
        {
            <p style="color: red;">Maintenance Required</p>
            <ul>
                @foreach (var reason in maintenanceCheck.Reason)
                {
                    <li>@reason</li>
                }
            </ul>
        }
        else
        {
            <p style="color: green;">All systems operational</p>
        }
    </div>
}

@code {
    private MachineUsage usage;
    private MachineMaintenanceCheckResult maintenanceCheck;

    protected override async Task OnInitializedAsync()
    {
        usage = await MachineStatusService.GetMachineUsageAsync(machineId: 1);
        maintenanceCheck = await MachineStatusService.GetMaintenanceCheckAsync(machineId: 1);
    }
}

@page "/reports"

@inject Services.MachineStatusService MachineStatusService

<h3>Machine Reports</h3>

@if (events == null)
{
    <p>Loading reports...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Event Code</th>
                <th>Description</th>
                <th>Timestamp</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var evt in events)
            {
                <tr>
                    <td>@evt.EventCode</td>
                    <td>@evt.Description</td>
                    <td>@evt.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="DownloadReport">Download CSV</button>
}

@code {
    private List<MachineEvent> events;

    protected override async Task OnInitializedAsync()
    {
        events = await MachineStatusService.GetMachineEventsAsync(machineId: 1);
    }

    private void DownloadReport()
    {
        var csvContent = "Event Code,Description,Timestamp\n" +
                         string.Join("\n", events.Select(e => $"{e.EventCode},{e.Description},{e.Timestamp}"));
        var byteArray = System.Text.Encoding.UTF8.GetBytes(csvContent);
        //var csvData = new BlazorDownloadFileData(byteArray, "text/csv", "MachineEvents.csv");

        //BlazorDownloadFileService.DownloadFile(csvData);
    }
}


@page "/"
@rendermode InteractiveServer
@inject Services.MachineStatusService MachineStatusService

<h3>Machine Dashboard</h3>

@if (usages == null 
|| maintenanceChecks == null
|| machines == null)
{
    <p>Loading dashboard...</p>
}
else
{
    <div class="row">
        @for (int i = 0; i < machines.Count; i++)
        {
            var li = i;
            <div class="col-sm-6">
                <Card>
                    <CardHeader>
                        <h3>@machines[li].Name</h3>
                        <h4>@machines[li].Location</h4>
                    </CardHeader>
                    <CardBody>
                        <div>
                            <h4>Usage</h4>
                            <p>Runtime Hours: @usages[li].RuntimeHours</p>
                            <p>Cycle Count: @usages[li].CycleCount</p>
                            <p>Last Updated: @usages[li].LastUpdated.ToString("yyyy-MM-dd HH:mm:ss")</p>
                        </div>

                        <div>
                            <h4>Maintenance Check</h4>
                            @if (maintenanceChecks[li].RequiresMaintenance)
                            {
                                <p style="color: red;">Maintenance Required</p>
                                <p>@maintenanceChecks[li].Reason</p>
                            }
                            else
                            {
                                <p style="color: green;">All systems operational</p>
                            }
                        </div>
                        <div>
                            <h4>Maintenance Prediction</h4>
                            <p>Prediction</p>
                        </div>
                    </CardBody>
                    <CardFooter>
                        <button class="btn btn-primary">Maintenance Check</button>
                        <button class="btn btn-primary">Maintenance Prediction</button>
                    </CardFooter>
                </Card>
            </div>
        }
    </div>

    <div class="row">

    </div>

}

@code {
    private List<MachineData> machines;
    private List<MachineUsage> usages;
    private List<MachineMaintenanceCheckResult> maintenanceChecks;

    protected override async Task OnInitializedAsync()
    {
        machines = await MachineStatusService.GetMachinesAsync();
        if (machines != null)
        {
            usages = new List<MachineUsage>();
			maintenanceChecks = new List<MachineMaintenanceCheckResult>();
		};
        foreach (MachineData machine in machines)
        {
			var usage = await MachineStatusService.GetMachineUsageAsync(machine.MachineId);
			var maintenanceCheck = await MachineStatusService.GetMaintenanceCheckAsync(machine.MachineId);
            usages.Add(usage);
            maintenanceChecks.Add(maintenanceCheck);
        }      
    }

	private async void MaintenanceCheck(int i, int machineId)
	{
		usages[i] = await MachineStatusService.GetMachineUsageAsync(machineId);
        maintenanceChecks[i] = await MachineStatusService.GetMaintenanceCheckAsync(machineId);
	}

	private async void MaintenancePrediction(int i, int machineId)
	{

    }
}
 